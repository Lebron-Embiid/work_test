公式:n!=n*(n-1)!
阶乘的计算方法 
阶乘指从1乘以2乘以3乘以4一直乘到所要求的数。 
例如所要求的数是4，则阶乘式是1×2×3×4，得到的积是24，24就是4的阶乘。 例如所要求的数是6，则阶乘式是1×2×3×..×6，得到的积是720，720就是6的阶乘。例如所要求的数是n，则阶乘式是1×2×3×…×n，设得到的积是x，x就是n的阶乘。 
阶乘的表示方法 
在表达阶乘时，就使用“！”来表示。如x的阶乘，就表示为x! 
他的原理就是反推，如，举例，求10的阶乘=10*9的阶乘（以后用!表示阶乘）那么9!=？，9!=9*8!,8!=8*7!,7!=7*6!,6!=6*5!,5!=5*4!,4!=4*3!, 
3!=3*2!,2!=2*1!,1的阶乘是多少呢？是1 1!=1*1,数学家规定，0!=1,所以0!=1!然后在往前推算，公式为n！(n!为当前数所求的阶乘)=n(当前数)*(n-1)!（比他少一的一个数N-1的阶乘把公式列出来像后推，只有1的!为1，所以要从1开始，要知道3！要知道2！就要知道1！但必须从1!开始推算所以要像后推，如果遍程序算法可以此公式用一个函数解决，并且嵌套调用次函数，，）把数带入公式为, 1!=1*1 2!=2*1(1!) 3!=3*2(2!) 4=4*6(3!),如果要是编程，怎么解决公式问题呢 
首先定义算法 
//算法，1，定义函数，求阶乘，定义函数fun,参数值n，（#include <stdio.h> 
long fun(int n ) //long 为长整型，因20！就很大了超过了兆亿 
（数学家定义数学家定义，0！=1，所以0！=1！，0与1的阶乘没有实际意义） 
2，函数体判断，如果这个数大于1，则执行if(n>1)（往回退算，这个数是10求它!,要从2的阶乘值开始，所以执行公式的次数定义为9，特别需要注意的是此处，当前第一次写入代码执行，已经算一次） 
求这个数的n阶乘（公式为，n！=n*(n-1)！，并且反回一个值， 
return (n*(fun(n-1));(这个公式为，首先这个公式求的是10的阶乘，但是求10的阶乘就需要，9的阶乘，9的阶乘我们不知道，所以就把10减1，也就是n-1做为一个新的阶乘，从新调用fun函数，求它的阶乘然后在把这个值返回到 fun(n-1),然后执行n*它返回的值，其实这个公式就是调用fun函数的结果，函数值为return 返回的值，（n-1）为参数依次类推，...一值嵌套调用fun函数， 
到把n-1的值=1,
 注意：此时已经运行9次fun（）函数算第一次运行，，调用几次fun函数呢？8次函数，所以，n-1执行了9次，n-1=1 ，n=2已经调用就可以求2乘阶值